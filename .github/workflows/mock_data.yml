name: Manually Trigger Mock Data Generation

on:
  workflow_dispatch:

jobs:
  run-mock-data-generator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Or your desired region

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: environments/dev

      - name: Get Terraform Outputs
        id: tf-outputs
        run: |
          echo "::set-output name=rule_name::$(terraform output -raw mock_data_schedule_rule_name)"
          echo "::set-output name=cluster_name::$(terraform output -raw ecs_cluster_name)"
          echo "::set-output name=task_family::$(terraform output -raw mock_data_task_family)"
        working-directory: environments/dev

      - name: Enable EventBridge Rule
        run: aws events enable-rule --name ${{ steps.tf-outputs.outputs.rule_name }}

      - name: Wait for task to start
        run: sleep 60 # Wait for the rule to trigger and the task to start

      - name: Get running task ARN
        id: ecs-task
        run: |
          TASK_ARN=$(aws ecs list-tasks --cluster ${{ steps.tf-outputs.outputs.cluster_name }} --family ${{ steps.tf-outputs.outputs.task_family }} --query 'taskArns[0]' --output text)
          echo "::set-output name=task_arn::$TASK_ARN"

      - name: Wait for task to complete
        run: aws ecs wait tasks-stopped --cluster ${{ steps.tf-outputs.outputs.cluster_name }} --tasks ${{ steps.ecs-task.outputs.task_arn }}

      - name: Disable EventBridge Rule
        run: aws events disable-rule --name ${{ steps.tf-outputs.outputs.rule_name }}